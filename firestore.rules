
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // All job applications stored in a flat collection
    match /applications/{applicationId} {

      // Helper function to check ownership
      function isOwner() {
        // On create, check the incoming data.
        // On read/update/delete, check the existing data.
        return request.auth.uid == (request.resource.data.userId == null ? resource.data.userId : request.resource.data.userId);
      }

      // Allow creating a new document if the authenticated user's UID
      // matches the userId field being written.
      allow create: if request.auth != null && isOwner();

      // Allow read/update/delete only if user is authenticated
      // and the document belongs to them.
      allow read, update, delete: if request.auth != null && isOwner();

      // Secure sub-collections
      match /notes/{noteId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/applications/$(applicationId)).data.userId == request.auth.uid;
      }

      match /events/{eventId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/applications/$(applicationId)).data.userId == request.auth.uid;
      }
    }
  }
}
